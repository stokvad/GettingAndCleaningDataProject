setwd("~/repo/GettingAndCleaningDataProject")
dir.exists("raw data")
dir.create("raw data")
dir
dir()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url, "./raw data/getdata_projectfiles_dataset.zip" method="curl")
?download.file
download.file(url, "./raw data/getdata_projectfiles_dataset.zip", method="curl")
unzip("./raw data/getdata_projectfiles_dataset.zip", exdir = "./raw_data")
unzip("./raw data/getdata_projectfiles_dataset.zip", exdir = "./raw data")
if (!dir.exists("raw data")) {
dir.create("raw data")
}
## download data (again)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url, "./raw data/getdata_projectfiles_dataset.zip", method="curl")
## unzip data to working directory subfolder
unzip("./raw data/getdata_projectfiles_dataset.zip", exdir = "./raw data")
labels <- readLines("./raw data/UCI HAR Dataset/activity_labels.txt")
labels
labelfile <- "./raw data/UCI HAR Dataset/activity_labels.txt"
labels <- read.table(labelfile, sep=" ")
labels
data <- read.table("./raw data/UCI HAR Dataset/test/X.test.txt")
data <- read.table("./raw data/UCI HAR Dataset/test/X_test.txt")
head(data)
summary(data)
head(data, 1)
summary(data)
names(data)
info(data)
trainfilename <- file.path(datapath, "train", "X_train.txt")
data <- read.table(trainfilename)
datapath <- "./raw data/UCI HAR Dataset"
trainfilename <- file.path(datapath, "train", "X_train.txt")
data <- read.table(trainfilename)
dim(data)
summary(data)
testfilename <- file.path(datapath, "test", "X_test.txt")
testdata <- read.table(testfilename)
head(testdata)
data <- rbind(data, testdata)
filename <- file.path(datapath, "features.txt")
featureNames <- read.table(filename)
featureNames
setNames(data, featureNames)
names(data)
dim(featureNames)
head(featureNames)
vNames <- as.vector(featureNames$V2)
vNames
class(vNames)
setNames(data, vNames)
names(data)
class(data)
selection <- grep("std|mean", names(data), perl=TRUE, value=FALSE)
selection
selection <- grep("std", names(data), perl=TRUE, value=FALSE)
selection
selection <- grep("*std*", names(data), perl=TRUE, value=FALSE)
selection <- grep("*std", names(data), perl=TRUE, value=FALSE)
selection <- grep("*std", names(data))
selection
names(data)
data2 <- setNames(data, as.vector(featureNames$V2))
selection <- grep("std|mean", names(data), perl=TRUE, value=FALSE)
selection
names(data2)
selection <- grep("std|mean", names(data2), perl=TRUE, value=FALSE)
selection
names(data2)[,selection]
names(data2[,selection])
selection <- grep("std|mean", names(data2))
names(data2[,selection])
class(selection)
all(data2)
anyNA(data2)
labelfilename <- file.path(datapath, "activity_labels.txt")
labels <- read.table(labelfilename)
labels$V1 = "activityID"
labels$V2 = "activityLabel"
labels
labelfilename <- file.path(datapath, "activity_labels.txt")
labels <- read.table(labelfilename)
newNames <- c("activityID", "activityLabel")
labels <- setNames(labels, newNames)
labels
# load train data to frame
trainfilename <- file.path(datapath, "train", "X_train.txt")
data <- read.table(trainfilename)
# load train activity to frame
trainfilename2 <- file.path(datapath, "train", "y_train.txt")
data2 <- read.table(trainfilename2)
# bind activity column to training-data
data <- cbind(data, data2)
head(data)
labels[,1]
labels[,2]
datapath <- "./raw data/UCI HAR Dataset"
# get column names (features)
featurefilename <- file.path(datapath, "features.txt")
featureNames <- read.table(featurefilename) # featureNames$V2 contains the labels
# vector with activity label names
activityNames <- c("activityId", "activityLabel")
# load train data to frame (with column names)
trainfilename <- file.path(datapath, "train", "X_train.txt")
data <- read.table(trainfilename, col.names = featureNames$V2)
# load train activity (with column names)
trainfilename2 <- file.path(datapath, "train", "y_train.txt")
data2 <- read.table(trainfilename2, col.names = activityNames)
# bind activity column to training-data
data <- cbind(data, data2)
# load test data (with column names)
testfilename <- file.path(datapath, "test", "X_test.txt")
testdata <- read.table(testfilename, col.names = featureNames$V2)
# load test activity (with column names)
testfilename2 <- file.path(datapath, "test", "y_test.txt")
testdata2 <- read.table(testfilename2, col.names = activityNames)
# bind activity column to test-data
testdata <- cbind(testdata, testdata2)
# merge test and training data to one dataset
data <- rbind(data, testdata)
data2 <- read.table(trainfilename2)
dim(data2)
datapath <- "./raw data/UCI HAR Dataset"
# get column names (features)
featurefilename <- file.path(datapath, "features.txt")
featureNames <- read.table(featurefilename) # featureNames$V2 contains the labels
# vector with activity label names
activityNames <- c("activityId", "activityLabel")
# load train data to frame (with column names)
trainfilename <- file.path(datapath, "train", "X_train.txt")
data <- read.table(trainfilename, col.names = featureNames$V2)
# load train activity (with column names)
trainfilename2 <- file.path(datapath, "train", "y_train.txt")
data2 <- read.table(trainfilename2, col.names = activityNames[1])
# bind activity column to training-data
data <- cbind(data, data2)
# load test data (with column names)
testfilename <- file.path(datapath, "test", "X_test.txt")
testdata <- read.table(testfilename, col.names = featureNames$V2)
# load test activity (with column names)
testfilename2 <- file.path(datapath, "test", "y_test.txt")
testdata2 <- read.table(testfilename2, col.names = activityNames)
# bind activity column to test-data
testdata <- cbind(testdata, testdata2)
# merge test and training data to one dataset
data <- rbind(data, testdata)
names(data)
selection <- grep("std|mean|activityId", names(data))
# return this selection
data[,selection]
data <- data[, selection]
names(data)
labelfilename <- file.path(datapath, "activity_labels.txt")
labels <- read.table(labelfilename, col.names = activityNames)
dataWithActivityNames <- merge(data, labels)
head(dataWithActivityNames)
str <- "filename"
class(str)
source("cleanupdata.R")
cleanupData()
# get column names (features)
featurefilename <- file.path(datapath, "features.txt")
featureNames <- read.table(featurefilename) # featureNames$V2 contains the labels
## get train data
# load train data to frame (with column names)
trainfilename <- file.path(datapath, "train", "X_train.txt")
data <- read.table(trainfilename, col.names = featureNames$V2)
# load train activity (with column names)
trainfilename2 <- file.path(datapath, "train", "y_train.txt")
data2 <- read.table(trainfilename2, col.names = activityNames[1])
# load train subject (with column names)
trainfilename3 <- file.path(datapath, "train", "subject_train.txt")
data3 <- read.table(trainfilename3, col.names = c("subject"))
# bind these dataframes to one dataset of train-data
data <- cbind(data, data2, data3)
## get test data
# load test data (with column names)
testfilename <- file.path(datapath, "test", "X_test.txt")
testdata <- read.table(testfilename, col.names = featureNames$V2)
# load test activity (with column names)
testfilename2 <- file.path(datapath, "test", "y_test.txt")
testdata2 <- read.table(testfilename2, col.names = activityNames[1])
# load test subject (with column names)
testfilename3 <- file.path(datapath, "test", "subject_test.txt")
testdata3 <- read.table(testfilename3, col.names = c("subject"))
# bind these dataframes to one dataset of test-data
testdata <- cbind(testdata, testdata2, testdata3)
# merge test and training data to one dataset
data <- rbind(data, testdata)
source("cleanupdata.R")
cleanupData()
library(plyr)
ddply(data, c("subject", "activityLabel", summarise, mean=mean()))
ddply(data, c("subject", "activityLabel", summarise, mean=mean(*)))
ddply(data, c("subject", "activityLabel", summarise, mean=mean(data)))
ddply(data, c("subject", "activityLabel", summarise, mean=mean(1:80)))
ddply(data, .(subject, acticivyId), summarise, mean=mean(1:80)))
ddply(data, .(subject, acticivyId), summarise, mean=mean(1:80))
ddply(data, .(subject, acticityId), summarise, mean=mean(1:80))
ddply(data, .(subject, activityId), summarise, mean=mean(1:80))
by(data, data$subject, FUN=solSums)
by(data, data$subject, FUN=colSums)
result <- by(data, data$subject, colSums)
dim(result)
result <- by(data, data$subject, colMeans)
dim(result)
head(result)
summary(result)
class(result)
df <- as.dataframe(result)
df <- as.data.frame(result)
library(dplyr)
install.packages("dplyr")
library(dplyr)
source("cleanupdata.R")
getMergedDataset()
data <- getTrimmedDataset(getMergedDataset())
data <- addActivityNamesToDataset(data)
summarize(data)
dim(data)
head(data)
grouped <- ddply(data, .(subject, activityLabel), numcolwise(mean))
grouped
names(grouped)
result <- group_by(data, subject, activityLabel) %>% summarise_each(funs(mean))
result
data <- data[,-activityId]
data <- data[,-"activityId""]
data <- data[,-"activityId"]
source("cleanupdata.R")
exportTidyDataset(data)
source("cleanupdata.R")
exportTidyDataset(data)
exportTidyDataset(data, "tidyData.txt")
write.csv(names(data), "columnnames.csv")
source("cleanupdata.R")
exportTidyDataset(data, "tidyData.txt")
